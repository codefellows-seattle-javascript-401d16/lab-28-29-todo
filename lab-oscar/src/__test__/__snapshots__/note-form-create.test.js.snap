// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`testing noteCreateForm testing onChange handler 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="input-form"
>
    <form
        onSubmit={[Function]}
    >
        <input
            name="content"
            onChange={[Function]}
            placeholder="What needs to done?"
            type="text"
            value=""
        />
        <button
            type="submit"
        >
            Add Note 
        </button>
    </form>
</div>,
  "nodes": Array [
    <div
      className="input-form"
>
      <form
            onSubmit={[Function]}
      >
            <input
                  name="content"
                  onChange={[Function]}
                  placeholder="What needs to done?"
                  type="text"
                  value=""
            />
            <button
                  type="submit"
            >
                  Add Note 
            </button>
      </form>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <NoteCreateForm
        handleNoteCreate={[Function]}
/>,
      "_debugID": 5,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": NoteCreateForm {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "handleChange": [Function],
        "handleSubmit": [Function],
        "props": Object {
          "handleNoteCreate": [Function],
        },
        "refs": Object {},
        "state": Object {
          "content": "",
          "undefined": "abc",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 3,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="input-form"
>
          <form
                    onSubmit={[Function]}
          >
                    <input
                              name="content"
                              onChange={[Function]}
                              placeholder="What needs to done?"
                              type="text"
                              value=""
                    />
                    <button
                              type="submit"
                    >
                              Add Note 
                    </button>
          </form>
</div>,
        "_debugID": 6,
        "_renderedOutput": <div
          className="input-form"
>
          <form
                    onSubmit={[Function]}
          >
                    <input
                              name="content"
                              onChange={[Function]}
                              placeholder="What needs to done?"
                              type="text"
                              value=""
                    />
                    <button
                              type="submit"
                    >
                              Add Note 
                    </button>
          </form>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <NoteCreateForm
    handleNoteCreate={[Function]}
/>,
}
`;
